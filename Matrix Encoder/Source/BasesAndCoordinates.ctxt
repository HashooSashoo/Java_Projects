#BlueJ class context
comment0.target=BasesAndCoordinates
comment0.text=\r\n\ Linear\ Algebra\ Test\ 2\ -\ Option\ 2\ \:\ Part\ 1\ <br>\r\n\ All\ code\ by\:\ Zakariya\ Hashmi\r\n
comment1.params=
comment1.target=java.lang.String\ giveDimension()
comment1.text=\r\n\ accepts\ a\ response\ from\ the\ user\ to\ enter\ the\ dimension\ of\ the\ vector\ space\r\n
comment10.params=
comment10.target=void\ problem3()
comment10.text=\r\n\ this\ method\ calculates\ the\ transition\ matrices\ from\ B\ to\ B'\ and\ vice\ versa\ <br>\r\n\ it\ first\ inverses\ both\ bases\ sets,\ then\ does\ multiplication\ to\ get\ the\ matrices\ <br>\r\n\ (B')^-1\ *\ B\ is\ transition\ from\ B\ to\ B',\ and\ (B)^-1\ *\ B'\ is\ transition\ from\ B'\ to\ B\ <br>\r\n\ both\ transition\ matrices\ are\ outputed\ with\ Matrix.printMatrix()\r\n
comment11.params=
comment11.target=void\ getResultVector()
comment11.text=\r\n\ this\ method\ gets\ a\ result\ vector\ from\ the\ user\ and\ puts\ it\ in\ the\ specifiedVector\ instance\ variable\r\n
comment12.params=
comment12.target=int\ basesResponse()
comment12.text=\r\n\ this\ method\ takes\ the\ response\ of\ the\ user\ and\ checks\ if\ the\ response\ is\ valid\ <br>\r\n\ it\ takes\ an\ input\ from\ the\ user,\ checks\ if\ it\ is\ a\ valid\ number,\ then\ sees\ if\ the\ number\ is\ a\ valid\ response\r\n
comment13.params=
comment13.target=java.lang.String\ decideIfBOrBPrime()
comment13.text=\r\n\ this\ method\ tells\ the\ user\ to\ input\ a\ number\ to\ decide\ what\ set\ of\ bases\ they\ want\ to\ use\ <br>\r\n\ they\ must\ enter\ 1\ for\ basis\ set\ B,\ and\ 2\ for\ basis\ set\ B'\ <br>\r\n\ the\ result\ is\ returned\ as\ a\ string\ value\r\n
comment14.params=response
comment14.target=int\ verifyResponse(java.lang.String)
comment14.text=\r\n\ this\ method\ takes\ the\ string\ value\ from\ decideIfBOrBPrime()\ and\ checks\ to\ see\ if\ its\ a\ valid\ number\ <br>\r\n\ if\ it\ is\ not\ a\ valid\ number,\ the\ method\ forces\ the\ user\ to\ enter\ the\ response\ again\r\n
comment15.params=response
comment15.target=int\ confirmRangeOfResponse(int)
comment15.text=\r\n\ this\ method\ confirms\ that\ the\ integer\ in\ verifyResponse()\ is\ 1\ or\ 2\ <br>\r\n\ if\ not\ 1\ or\ 2,\ the\ method\ makes\ the\ user\ enter\ the\ response\ again\r\n
comment16.params=
comment16.target=void\ printCoordsOfResult()
comment16.text=\r\n\ this\ method\ uses\ the\ vector\ in\ specifiedVector\ to\ create\ a\ set\ of\ coordinates\ in\ both\ basis\ sets\ <br>\r\n\ the\ method\ first\ gets\ what\ basis\ set\ the\ user\ wants\ in\ basesResponse()\ <br>\r\n\ it\ then\ multiplies\ the\ specified\ basis\ set\ by\ the\ vector\ to\ get\ the\ coordinates\ of\ that\ vector\ in\ respect\ to\ the\ bases\ <br>\r\n\ then\ it\ uses\ a\ transition\ matrix\ to\ change\ the\ coordinates\ of\ one\ set\ to\ the\ coords\ of\ another\ <br>\r\n\ this\ happens\ whether\ B\ or\ B'\ is\ picked,\ and\ if\ the\ response\ is\ not\ 1\ or\ 2,\ the\ user\ must\ put\ in\ the\ response\ again\r\n
comment17.params=
comment17.target=void\ problem4()
comment17.text=\r\n\ this\ method\ gets\ a\ result\ vector\ from\ the\ user\ using\ getResultVector()\ <br>\r\n\ it\ also\ outputs\ the\ vector's\ coordinates\ in\ both\ basis\ sets\ given\ by\ the\ user\r\n
comment18.params=
comment18.target=void\ manualMode()
comment19.params=
comment19.target=void\ automaticMode()
comment2.params=p_dimension
comment2.target=int\ verifyDimension(java.lang.String)
comment2.text=\r\n\ checks\ to\ see\ if\ the\ user's\ response\ from\ giveDimension()\ is\ an\ actual\ number\ <br>\r\n\ makes\ the\ user\ enter\ number\ again\ if\ the\ response\ is\ not\ a\ number\r\n
comment20.params=
comment20.target=void\ execute()
comment20.text=\r\n\ this\ method\ executes\ problems\ 1\ through\ 4\ on\ the\ test\r\n
comment21.params=args
comment21.target=void\ main(java.lang.String[])
comment21.text=\r\n\ main\ method\r\n
comment3.params=p_dimension
comment3.target=int\ confirmRangeOfDimension(int)
comment3.text=\r\n\ checks\ if\ the\ response\ (confirmed\ to\ be\ a\ number)\ is\ in\ between\ 1\ and\ 10\ <br>\r\n\ if\ not\ in\ between\ 1\ and\ 10,\ the\ user\ is\ forces\ to\ enter\ another\ number\r\n
comment4.params=
comment4.target=void\ assignDimension()
comment4.text=\r\n\ this\ method\ assigns\ a\ user-specified\ dimension\ to\ the\ dimension\ variable\ <br>\r\n\ it\ asks\ the\ user\ to\ enter\ a\ dimension,\ and\ checks\ if\ it's\ allowed\ to\ be\ a\ dimension\r\n
comment5.params=
comment5.target=void\ getVectors()
comment5.text=\r\n\ this\ method\ creates\ two\ sets\ of\ bases\ vectors\ that\ the\ user\ enters\ <br>\r\n\ the\ user\ puts\ elements\ of\ the\ vectors\ in,\ which\ are\ then\ checked\ for\ linear\ independence\ <br>\r\n\ the\ linear\ independence\ check\ happens\ in\ the\ checkLinearIndependence()\ method\ <br>\r\n\ after\ that,\ the\ bases\ sets\ are\ assigned\ to\ their\ respective\ variables\r\n
comment6.params=bases\ rows\ columns
comment6.target=double[][]\ fillVectorsInBases(double[][],\ int,\ int)
comment6.text=\r\n\ this\ method\ makes\ the\ user\ fill\ in\ a\ set\ of\ n\ vectors\ in\ R^n\ to\ make\ a\ set\ of\ bases\r\n
comment7.params=bases
comment7.target=double[][]\ checkLinearIndependence(double[][])
comment7.text=\r\n\ this\ method\ checks\ to\ see\ if\ an\ entered\ set\ of\ basis\ vectors\ is\ linearly\ independent\ <br>\r\n\ it\ checks\ the\ determinant\ of\ the\ square\ matrix\ they\ constitute\ to\ see\ if\ they\ have\ linear\ independence\ or\ not\ <br>\r\n\ if\ the\ determinant\ is\ zero,\ they\ are\ linearly\ dependent\ and\ the\ user\ has\ to\ enter\ new\ vectors\ <br>\r\n\ if\ not,\ the\ program\ moves\ on\r\n
comment8.params=
comment8.target=void\ assignVectorsToMatrix()
comment8.text=\r\n\ this\ method\ gives\ tells\ the\ user\ to\ enter\ two\ sets\ of\ bases\ and\ checks\ the\ linear\ independence\ of\ both\ of\ them\ <br>\r\n\ it\ then\ assigns\ both\ sets\ to\ the\ instance\ variables\ firstBases\ and\ secondBases\r\n
comment9.params=
comment9.target=void\ problem1And2()
comment9.text=\r\n\ this\ method\ accepts\ a\ positive\ integer\ from\ the\ user\ and\ makes\ it\ the\ dimension\ of\ the\ vector\ <br>\r\n\ it\ uses\ the\ assignDimension()\ method\ to\ get\ the\ job\ done\ <br>\r\n\ this\ method\ also\ uses\ assignVectorsToMatrix()\ to\ get\ vectors\ from\ the\ user\ and\ put\ them\ in\ two\ sets\ of\ bases\ <br>\r\n\ the\ checkLinearIndependence()\ method\ checks\ for\ linear\ independence\ of\ the\ vectors\ by\ calculating\ the\ determinant\r\n
numComments=22
