#BlueJ class context
comment0.target=MadLib
comment0.text=\r\n\ @author\ Zakariya\ Hashmi\r\n\ @version\ 1.3\r\n
comment1.params=
comment1.target=MadLib()
comment10.params=
comment10.target=java.lang.String\ getPassiveNoun()
comment10.text=\r\n\ the\ common\ noun\ word\ request\ method\r\n
comment11.params=typeOfNoun
comment11.target=java.lang.String\ getProperNoun(java.lang.String)
comment11.text=\r\n\ the\ proper\ noun\ word\ request\ method<br>\r\n\ takes\ parameter\ of\ specific\ thing\ (ex.\ country,\ place)\r\n
comment12.params=
comment12.target=java.lang.String\ getAdjective()
comment12.text=\r\n\ the\ adjective\ word\ request\ method\r\n
comment13.params=
comment13.target=java.lang.String\ getAdverb()
comment13.text=\r\n\ the\ adverb\ word\ request\ method\r\n
comment14.params=numMadLib
comment14.target=void\ getMadLib(int)
comment14.text=\r\n\ a\ method\ that\ uses\ if\ statement\ to\ get\ the\ mad\ lib\ based\ on\ the\ condition\ number<br>\r\n\ will\ be\ used\ when\ execution\ happens\r\n
comment15.params=
comment15.target=void\ execute()
comment15.text=\r\n\ the\ whole\ mad\ lib\ game\r\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\r\n\ local\ main\ method\r\n
comment3.params=
comment3.target=java.lang.String\ madLibOne()
comment3.text=\r\n\ the\ first\ Mad\ Lib<br>\r\n\ it\ calls\ words\ 18\ times\ (finalCall\ \=\ times\ -\ 1\ because\ the\ tracker\ starts\ at\ 0).\r\n
comment4.params=
comment4.target=java.lang.String\ madLibTwo()
comment4.text=\r\n\ the\ second\ Mad\ Lib<br>\r\n\ it\ calls\ words\ 41\ times?\r\n
comment5.params=word
comment5.target=java.lang.String\ sayRecur(java.lang.String)
comment5.text=\r\n\ used\ if\ there\ is\ a\ recurring\ word\ in\ the\ Mad\ Lib<br>\r\n\ this\ method\ prints\ the\ given\ word\ in\ memory\ while\ also\ adding\ the\ finalCallTracker\r\n
comment6.params=numWord
comment6.target=java.lang.String\ firstWordPrompt(int)
comment6.text=\r\n\ changes\ the\ prompt\ based\ on\ the\ conditions\ of\ the\ numWord\ (the\ word\ request\ num\ instances),\ or\ the\ finalCallTracker\r\n
comment7.params=wordType\ numWord
comment7.target=java.lang.String\ scanner(java.lang.String,\ int)
comment7.text=\r\n\ the\ scanner\ for\ every\ word\ request\ method<br>\r\n\ it\ takes\ the\ word\ for\ the\ prompt\ and\ the\ word\ getter\ number\r\n
comment8.params=firstCon\ secondCon\ comment\ firstNewWord\ secondNewWord
comment8.target=java.lang.String\ conditional(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=\r\n\ this\ method\ is\ used\ when\ you\ want\ a\ word\ that\ alternates\ with\ the\ MadLibber<br>\r\n\ ex.\ gender,\ this\ or\ that,\ those\ kind\ of\ situations<br>\r\n\ it\ takes\ the\ words\ to\ ask\ the\ MadLibber\ the\ prompt,\ and\ spits\ out\ a\ conditional\ word\ based\ on\ that\ prompt<br>\r\n\ ex.\ "asks\ if\ boy\ or\ girl,\ spits\ out\ he\ or\ she"<br>\r\n\ a\ comment\ exists\ if\ you\ want\ to\ put\ a\ quirky\ comment\ in\ the\ middle\ of\ the\ prompt\ ;)\r\n
comment9.params=
comment9.target=java.lang.String\ getVerb()
comment9.text=\r\n\ the\ verb\ word\ request\ method\r\n
numComments=16
